# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-05-12 00:01
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import dateSite.models.client
from django.conf import settings
import django.db.models.deletion
import django.utils.timezone

class Migration(migrations.Migration):
    initial = True
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]
    operations = [
        migrations.CreateModel(
            name='Search',
            fields=[
                ('seacode', models.BigAutoField(primary_key=True, serialize=False)),
                ('seaminage', models.SmallIntegerField(blank=True, default=18, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(18)], verbose_name='From')),
                ('seamaxage', models.SmallIntegerField(blank=True, default=30, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(18)], verbose_name='To')),
                ('seacountry', models.CharField(blank=True, max_length=60, null=True, verbose_name='Country')),
                ('seaonline', models.BooleanField(default=False, verbose_name='Online')),
                ('seavideo', models.BooleanField(default=False, verbose_name='With video')),
                ('seaphoto', models.BooleanField(default=False, verbose_name='Only photo')),
                ('seaincome', models.CharField(null=True, verbose_name='Income')),
                ('seamstatus', models.CharField(null=True, verbose_name='Marital Status')),
                ('seaethnicity', models.CharField(null=True, verbose_name='Ethnicity')),
                ('seafirstlang', models.CharField(null=True, verbose_name='First Language')),
                ('seasecondlang', models.CharField(null=True, verbose_name='Second Language')),
                ('seaocupation', models.CharField(null=True, verbose_name='Ocupation')),
                ('seaheight', models.CharField(null=True, verbose_name='Height')),
                ('seaweight', models.CharField(null=True, verbose_name='Weight')),
                ('seachildren', models.SmallIntegerField(null=True, verbose_name='Children')),
                ('seapet', models.CharField(null=True, verbose_name='Pet')),
                ('seasport', models.CharField(null=True, verbose_name='Pet')),
                ('seahobbie', models.CharField(null=True, verbose_name='Pet')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlockedClient',
            fields=[
                ('blocode', models.AutoField(primary_key=True, serialize=False)),
                ('blodate', models.DateTimeField()),
            ],
            options={
                'managed': True,
                'db_table': 'blockedclient',
            },
        ),
        migrations.CreateModel(
            name='BodyType',
            fields=[
                ('bodcode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('bodname', models.CharField(max_length=100, verbose_name='Name')),
                ('bodactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'bodytype',
            },
        ),
        migrations.CreateModel(
            name='BodyTypeLanguage',
            fields=[
                ('bolcode', models.AutoField(primary_key=True, serialize=False)),
                ('bolname', models.CharField(max_length=100)),
                ('bodcode', models.ForeignKey(db_column='bodcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='bodytypelang', to='dateSite.BodyType')),
            ],
            options={
                'managed': True,
                'db_table': 'bodytype_language',
            },
        ),
        migrations.CreateModel(
            name='Breast',
            fields=[
                ('brecode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('brename', models.CharField(max_length=100, verbose_name='Name')),
                ('breactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'breast',
            },
        ),
        migrations.CreateModel(
            name='Butt',
            fields=[
                ('butcode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('butname', models.CharField(max_length=100, verbose_name='Name')),
                ('butactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'butt',
            },
        ),
        migrations.CreateModel(
            name='Children',
            fields=[
                ('chicode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('chiname', models.CharField(max_length=100, verbose_name='Name')),
                ('chiactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'children',
            },
        ),
        migrations.CreateModel(
            name='ChildrenLanguage',
            fields=[
                ('chlcode', models.AutoField(primary_key=True, serialize=False)),
                ('chlname', models.CharField(max_length=100)),
                ('chicode', models.ForeignKey(db_column='chicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='childrenlang', to='dateSite.Children')),
            ],
            options={
                'managed': True,
                'db_table': 'children_language',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('citcode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('citname', models.CharField(max_length=40, verbose_name='Name')),
                ('citactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='CityLanguage',
            fields=[
                ('cilcode', models.BigAutoField(primary_key=True, serialize=False)),
                ('cilname', models.CharField(max_length=40)),
                ('citcode', models.ForeignKey(db_column='citcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='citylang_city', to='dateSite.City')),
            ],
            options={
                'managed': True,
                'db_table': 'city_language',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('clicode', models.BigAutoField(primary_key=True, serialize=False)),
                ('cliusername', models.CharField(blank=True, max_length=30, verbose_name='username')),
                ('cliname', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name')),
                ('clifullname', models.CharField(blank=True, max_length=80, null=True, verbose_name='Full Name')),
                ('clidescription', models.TextField(blank=True, null=True, verbose_name='About')),
                ('clibirthdate', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('clidatesubscription', models.DateTimeField()),
                ('cliemail', models.CharField(max_length=254, unique=True, verbose_name='Email')),
                ('clipassword', models.CharField(max_length=128, verbose_name='Password')),
                ('clibalance', models.IntegerField(blank=True, null=True, verbose_name='Balance')),
                ('cliactive', models.BooleanField(verbose_name='Active')),
                ('clireplychannel', models.CharField(max_length=30, null=True, verbose_name='Websocket')),
                ('cliverified', models.BooleanField(default=False, verbose_name='Verified')),
                ('langlevel', models.IntegerField(blank=True, null=True, verbose_name='Languaje Level')),
                ('bodycode', models.ForeignKey(blank=True, db_column='bodcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_bodytype', to='dateSite.BodyType')),
                ('breastcode', models.ForeignKey(blank=True, db_column='brecode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_waist', to='dateSite.Breast')),
                ('buttcode', models.ForeignKey(blank=True, db_column='butcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_breast', to='dateSite.Butt')),
                ('chicode', models.ForeignKey(blank=True, db_column='chicode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children_code', to='dateSite.Children')),
                ('citcode', models.ForeignKey(blank=True, db_column='citcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_city', to='dateSite.City')),
                ('cliuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='ClientCollectionAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'client_collection',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('coucode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('couname', models.CharField(max_length=100, verbose_name='Name')),
                ('couactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='CountryLanguage',
            fields=[
                ('colcode', models.AutoField(primary_key=True, serialize=False)),
                ('colname', models.CharField(max_length=100)),
                ('coucode', models.ForeignKey(db_column='coucode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='countrylang_country', to='dateSite.Country')),
            ],
            options={
                'managed': True,
                'db_table': 'country_language',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('educode', models.AutoField(primary_key=True, serialize=False)),
                ('edudescription', models.CharField(max_length=100)),
                ('eduactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'education',
            },
        ),
        migrations.CreateModel(
            name='EducationLanguage',
            fields=[
                ('edlcode', models.AutoField(primary_key=True, serialize=False)),
                ('edldescription', models.CharField(max_length=100)),
                ('educode', models.ForeignKey(db_column='educode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='educationlang_education', to='dateSite.Education')),
            ],
            options={
                'managed': True,
                'db_table': 'education_language',
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('ethcode', models.AutoField(primary_key=True, serialize=False)),
                ('ethname', models.CharField(max_length=200)),
                ('ethactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'ethnicity',
            },
        ),
        migrations.CreateModel(
            name='EthnicityLanguage',
            fields=[
                ('etlcode', models.AutoField(primary_key=True, serialize=False)),
                ('etlname', models.CharField(max_length=200)),
                ('ethcode', models.ForeignKey(db_column='ethcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='ethnicitylang_ethnicity', to='dateSite.Ethnicity')),
            ],
            options={
                'managed': True,
                'db_table': 'ethnicity_language',
            },
        ),
        migrations.CreateModel(
            name='EyesColor',
            fields=[
                ('eyecode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('eyename', models.CharField(max_length=100, verbose_name='Name')),
                ('eyeactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'eyescolor',
            },
        ),
        migrations.CreateModel(
            name='EyesColorLanguage',
            fields=[
                ('eylcode', models.AutoField(primary_key=True, serialize=False)),
                ('eylname', models.CharField(max_length=100)),
                ('eyecode', models.ForeignKey(db_column='eyecode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='eyeslang', to='dateSite.EyesColor')),
            ],
            options={
                'managed': True,
                'db_table': 'eyescolor_language',
            },
        ),
        migrations.CreateModel(
            name='Feeling',
            fields=[
                ('feecode', models.AutoField(primary_key=True, serialize=False)),
                ('feedescription', models.CharField(max_length=80)),
                ('feeiconfile', models.ImageField(upload_to='feelings', verbose_name='Icon')),
                ('feeactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'feeling',
            },
        ),
        migrations.CreateModel(
            name='FeelingLanguage',
            fields=[
                ('felcode', models.AutoField(primary_key=True, serialize=False)),
                ('feldescription', models.CharField(max_length=80)),
                ('feecode', models.ForeignKey(db_column='feecode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='feelinglang_feeling', to='dateSite.Feeling')),
            ],
            options={
                'managed': True,
                'db_table': 'feeling_language',
            },
        ),
        migrations.CreateModel(
            name='Franchise',
            fields=[
                ('fracode', models.AutoField(primary_key=True, serialize=False)),
                ('fradescription', models.CharField(max_length=200)),
                ('fraactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'franchise',
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('frecode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('frename', models.CharField(max_length=100, verbose_name='Name')),
                ('freactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'frequency',
            },
        ),
        migrations.CreateModel(
            name='FrequencyLanguage',
            fields=[
                ('fqlcode', models.AutoField(primary_key=True, serialize=False)),
                ('fqlname', models.CharField(max_length=100)),
                ('frecode', models.ForeignKey(db_column='frecode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='frequencylang', to='dateSite.Frequency')),
            ],
            options={
                'managed': True,
                'db_table': 'frequency_language',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('gencode', models.AutoField(primary_key=True, serialize=False)),
                ('genname', models.CharField(max_length=100)),
                ('genpreference', models.PositiveSmallIntegerField(default=1)),
                ('gendescription', models.CharField(blank=True, max_length=250, null=True)),
                ('genactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'gender',
            },
        ),
        migrations.CreateModel(
            name='GenderLanguage',
            fields=[
                ('gelcode', models.AutoField(primary_key=True, serialize=False)),
                ('gelname', models.CharField(max_length=100)),
                ('geldescription', models.CharField(blank=True, max_length=250, null=True)),
                ('gencode', models.ForeignKey(db_column='getcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='genderlang_gender', to='dateSite.Gender')),
            ],
            options={
                'managed': True,
                'db_table': 'gender_language',
            },
        ),
        migrations.CreateModel(
            name='HairColor',
            fields=[
                ('haicode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('hainame', models.CharField(max_length=100, verbose_name='Name')),
                ('haiactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'haircolor',
            },
        ),
        migrations.CreateModel(
            name='HairColorLanguage',
            fields=[
                ('halcode', models.AutoField(primary_key=True, serialize=False)),
                ('halname', models.CharField(max_length=100)),
                ('haicode', models.ForeignKey(db_column='haicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hairlang', to='dateSite.HairColor')),
            ],
            options={
                'managed': True,
                'db_table': 'haircolor_language',
            },
        ),
        migrations.CreateModel(
            name='HairLength',
            fields=[
                ('hlecode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('hlename', models.CharField(max_length=100, verbose_name='Name')),
                ('hleactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'hairlength',
            },
        ),
        migrations.CreateModel(
            name='HairLengthLanguage',
            fields=[
                ('hllcode', models.AutoField(primary_key=True, serialize=False)),
                ('hllname', models.CharField(max_length=100)),
                ('hlecode', models.ForeignKey(db_column='hlecode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hairlengthlang', to='dateSite.HairLength')),
            ],
            options={
                'managed': True,
                'db_table': 'hairlength_language',
            },
        ),
        migrations.CreateModel(
            name='Height',
            fields=[
                ('heicode', models.AutoField(primary_key=True, serialize=False)),
                ('heidescription', models.CharField(max_length=100)),
            ],
            options={
                'managed': True,
                'db_table': 'height',
            },
        ),
        migrations.CreateModel(
            name='Hobbie',
            fields=[
                ('hobcode', models.AutoField(primary_key=True, serialize=False)),
                ('hobname', models.CharField(max_length=200)),
                ('hobactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'hobbie',
            },
        ),
        migrations.CreateModel(
            name='HobbieClient',
            fields=[
                ('hoccode', models.BigAutoField(primary_key=True, serialize=False)),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hobbieclient_client', to='dateSite.Client')),
                ('hobcode', models.ForeignKey(db_column='hobcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hobbieclient_hobbie', to='dateSite.Hobbie')),
            ],
            options={
                'managed': True,
                'db_table': 'hobbie_client',
            },
        ),
        migrations.CreateModel(
            name='HobbieLanguage',
            fields=[
                ('holcode', models.AutoField(primary_key=True, serialize=False)),
                ('holname', models.CharField(max_length=200)),
                ('hobcode', models.ForeignKey(db_column='hobcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hobbielang_hobbie', to='dateSite.Hobbie')),
            ],
            options={
                'managed': True,
                'db_table': 'hobbie_language',
            },
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('inbcode', models.BigAutoField(primary_key=True, serialize=False)),
                ('inbtitle', models.CharField(max_length=250)),
                ('inbmessage', models.TextField()),
                ('inbmessageoriginal', models.TextField(blank=True, null=True)),
                ('inbsenddate', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Datetime to send inbox')),
                ('inbread', models.BooleanField(default=False)),
                ('inbreadate', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Datetime to send inbox')),
                ('inbcodeorigin', models.IntegerField(blank=True, db_index=True, null=True)),
                ('clicodemanager', models.ForeignKey(blank=True, db_column='clicodemanager', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='inbox_clientmanager', to='dateSite.Client')),
                ('clicoderecieved', models.ForeignKey(db_column='clicoderecieved', on_delete=django.db.models.deletion.DO_NOTHING, related_name='inbox_clientrecieved', to='dateSite.Client')),
                ('clicodesent', models.ForeignKey(db_column='clicodesent', on_delete=django.db.models.deletion.DO_NOTHING, related_name='inbox_clientsent', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'inbox',
            },
        ),
        migrations.CreateModel(
            name='InboxPicture',
            fields=[
                ('ipicode', models.BigAutoField(primary_key=True, serialize=False)),
                ('ipipath', models.ImageField(blank=True, null=True, upload_to=dateSite.models.client.get_user_image_folder)),
                ('inbcode', models.ForeignKey(db_column='inbcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='inboxpicture_inbox', to='dateSite.Inbox')),
            ],
            options={
                'managed': True,
                'db_table': 'inboxpicture',
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('inccode', models.AutoField(primary_key=True, serialize=False)),
                ('incmin', models.IntegerField()),
                ('incmax', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'income',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('lancode', models.AutoField(primary_key=True, serialize=False)),
                ('lanname', models.CharField(max_length=60)),
            ],
            options={
                'managed': True,
                'db_table': 'language',
            },
        ),
        migrations.CreateModel(
            name='LogSession',
            fields=[
                ('logcode', models.BigAutoField(primary_key=True, serialize=False)),
                ('logsignin', models.DateTimeField(verbose_name='Datetime to connect')),
                ('logsignout', models.DateTimeField(blank=True, null=True, verbose_name='Datetime to disconnect')),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='log_client', to='dateSite.Client')),
                ('clicodemanager', models.ForeignKey(blank=True, db_column='clicodemanager', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='log_clientmanager', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'logsession',
            },
        ),
        migrations.CreateModel(
            name='ManagerClient',
            fields=[
                ('maccode', models.BigAutoField(primary_key=True, serialize=False)),
                ('clicodegirl', models.ForeignKey(db_column='clicodegirl', on_delete=django.db.models.deletion.DO_NOTHING, related_name='managerclient_girl', to='dateSite.Client')),
                ('clicodemanager', models.ForeignKey(db_column='clicodemanager', on_delete=django.db.models.deletion.DO_NOTHING, related_name='managerclient_manager', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'manager_client',
            },
        ),
        migrations.CreateModel(
            name='Marital',
            fields=[
                ('marcode', models.AutoField(primary_key=True, serialize=False)),
                ('marname', models.CharField(max_length=100)),
                ('maractive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'marital',
            },
        ),
        migrations.CreateModel(
            name='MaritalLanguage',
            fields=[
                ('malcode', models.AutoField(primary_key=True, serialize=False)),
                ('malname', models.CharField(max_length=100)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='maritallang_language', to='dateSite.Language')),
                ('marcode', models.ForeignKey(db_column='marcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='maritallang_marital', to='dateSite.Marital')),
            ],
            options={
                'managed': True,
                'db_table': 'marital_language',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('mescode', models.BigAutoField(primary_key=True, serialize=False)),
                ('mescontent', models.TextField(verbose_name='Message')),
                ('mescontentoriginal', models.TextField(blank=True, null=True, verbose_name='MessageOriginal')),
                ('mesdatetime', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Datetime to send message')),
                ('mesread', models.BooleanField(default=False)),
                ('clicodemanager', models.ForeignKey(blank=True, db_column='clicodemanager', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='message_clientmanager', to='dateSite.Client')),
                ('clicoderecieved', models.ForeignKey(db_column='clicoderecieved', on_delete=django.db.models.deletion.DO_NOTHING, related_name='message_clientrecieved', to='dateSite.Client')),
                ('clicodesent', models.ForeignKey(db_column='clicodesent', on_delete=django.db.models.deletion.DO_NOTHING, related_name='message_clientsent', to='dateSite.Client')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('netcode', models.BigAutoField(primary_key=True, serialize=False)),
                ('netdate', models.DateTimeField()),
                ('clicoderecieved', models.ForeignKey(db_column='clicoderecieved', on_delete=django.db.models.deletion.DO_NOTHING, related_name='networks_clientrecieved', to='dateSite.Client')),
                ('clicodesent', models.ForeignKey(db_column='clicodesent', on_delete=django.db.models.deletion.DO_NOTHING, related_name='network_clientsent', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'network',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notcode', models.BigAutoField(primary_key=True, serialize=False)),
                ('notdate', models.DateTimeField()),
                ('notread', models.BooleanField(default=False)),
                ('clicoderecieved', models.ForeignKey(db_column='clicoderecieved', on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_clientrecieved', to='dateSite.Client')),
                ('clicodesent', models.ForeignKey(db_column='clicodesent', on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_clientsent', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('ntycode', models.AutoField(primary_key=True, serialize=False)),
                ('ntyname', models.CharField(max_length=40)),
                ('ntydescription', models.CharField(max_length=250)),
                ('ntyactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'notificationtype',
            },
        ),
        migrations.CreateModel(
            name='NotificationTypeLanguage',
            fields=[
                ('ntlcode', models.AutoField(primary_key=True, serialize=False)),
                ('ntldescription', models.CharField(max_length=250)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='notificationtylang_language', to='dateSite.Language')),
                ('ntycode', models.ForeignKey(db_column='ntycode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='notificationtylang_notificationty', to='dateSite.NotificationType')),
            ],
            options={
                'managed': True,
                'db_table': 'notificationtype_language',
            },
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('ocucode', models.AutoField(primary_key=True, serialize=False)),
                ('ocudescription', models.CharField(max_length=100)),
                ('ocuactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'occupation',
            },
        ),
        migrations.CreateModel(
            name='OccupationLanguage',
            fields=[
                ('oclcode', models.AutoField(primary_key=True, serialize=False)),
                ('oclname', models.CharField(max_length=100)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='occupationlang_language', to='dateSite.Language')),
                ('ocucode', models.ForeignKey(db_column='ocucode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='occupationlang_occupation', to='dateSite.Occupation')),
            ],
            options={
                'managed': True,
                'db_table': 'occupation_language',
            },
        ),
        migrations.CreateModel(
            name='PayPlan',
            fields=[
                ('paycode', models.BigAutoField(primary_key=True, serialize=False)),
                ('payname', models.CharField(max_length=100)),
                ('paycredits', models.SmallIntegerField()),
                ('payprice', models.FloatField(verbose_name='Price')),
                ('payunitprice', models.FloatField(verbose_name='Unit price')),
                ('payorder', models.SmallIntegerField(blank=True, null=True)),
                ('payextra', models.SmallIntegerField(blank=True, null=True)),
                ('payactive', models.BooleanField(default=False, verbose_name='Active')),
                ('paycodeoffer', models.IntegerField(blank=True, null=True)),
                ('paycodeccbill', models.IntegerField()),
            ],
            options={
                'managed': True,
                'db_table': 'payplan',
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('petcode', models.AutoField(primary_key=True, serialize=False)),
                ('petname', models.CharField(max_length=200)),
                ('petactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'pet',
            },
        ),
        migrations.CreateModel(
            name='PetClient',
            fields=[
                ('peccode', models.BigAutoField(primary_key=True, serialize=False)),
                ('pechave', models.BooleanField()),
                ('peclike', models.BooleanField()),
                ('pecdontlike', models.BooleanField()),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='petclient_client', to='dateSite.Client')),
                ('petcode', models.ForeignKey(db_column='petcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='petclient_pet', to='dateSite.Pet')),
            ],
            options={
                'managed': True,
                'db_table': 'pet_client',
            },
        ),
        migrations.CreateModel(
            name='PetLanguage',
            fields=[
                ('pelcode', models.AutoField(primary_key=True, serialize=False)),
                ('pelname', models.CharField(max_length=200)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='petlang_language', to='dateSite.Language')),
                ('petcode', models.ForeignKey(db_column='petcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='petlang_pet', to='dateSite.Pet')),
            ],
            options={
                'managed': True,
                'db_table': 'pet_language',
            },
        ),
        migrations.CreateModel(
            name='PhotoAlbum',
            fields=[
                ('phacode', models.BigAutoField(primary_key=True, serialize=False)),
                ('phaname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Name')),
                ('phadescription', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('phaactive', models.BooleanField(verbose_name='Active')),
                ('phacreationdate', models.DateTimeField()),
                ('phatype', models.CharField(choices=[('1', 'Public'), ('2', 'Private')], default=1, max_length=1)),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='picture_client', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'album_client',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('piccode', models.BigAutoField(primary_key=True, serialize=False)),
                ('picpath', models.ImageField(default='clients_pictures/default.png', upload_to=dateSite.models.client.get_user_image_folder)),
                ('picdescription', models.CharField(blank=True, max_length=300, null=True, verbose_name='Description')),
                ('picactive', models.BooleanField(default=True)),
                ('picprofile', models.BooleanField(default=True)),
                ('phacode', models.ForeignKey(db_column='phacode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='picture_album', to='dateSite.PhotoAlbum')),
            ],
            options={
                'managed': True,
                'db_table': 'picture_client',
            },
        ),
        migrations.CreateModel(
            name='ProfileVisit',
            fields=[
                ('procode', models.BigAutoField(primary_key=True, serialize=False)),
                ('prodate', models.DateTimeField()),
                ('clicoderecieved', models.ForeignKey(db_column='clicoderecieved', on_delete=django.db.models.deletion.DO_NOTHING, related_name='profilevisit_clientrecieved', to='dateSite.Client')),
                ('clicodesent', models.ForeignKey(db_column='clicodesent', on_delete=django.db.models.deletion.DO_NOTHING, related_name='profilevisit_clientsent', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'profilevisit',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('purcode', models.BigAutoField(primary_key=True, serialize=False)),
                ('puridsuscription', models.CharField(max_length=100, unique=True)),
                ('purcredit', models.SmallIntegerField(blank=True, null=True)),
                ('purdate', models.DateTimeField(blank=True, null=True)),
                ('purstatus', models.BooleanField(default=False, verbose_name='Active')),
                ('purbalance', models.SmallIntegerField(blank=True, null=True)),
                ('purobservation', models.CharField(blank=True, max_length=40, null=True)),
                ('purfname', models.CharField(blank=True, max_length=20, null=True)),
                ('purlname', models.CharField(blank=True, max_length=30, null=True)),
                ('puremail', models.CharField(blank=True, max_length=40, null=True)),
                ('puraddress1', models.CharField(blank=True, max_length=40, null=True)),
                ('purcity', models.CharField(blank=True, max_length=30, null=True)),
                ('purcountry', models.CharField(blank=True, max_length=30, null=True)),
                ('purzipcode', models.CharField(blank=True, max_length=10, null=True)),
                ('purprice', models.FloatField(blank=True, null=True, verbose_name='Unit price')),
                ('purcardtype', models.CharField(blank=True, choices=[('VISA', 'Visa'), ('MASTERCARD', 'Mastercard')], max_length=10, null=True)),
                ('purccbillreferer', models.CharField(blank=True, max_length=30, null=True)),
                ('purapprovalid', models.BigIntegerField(blank=True, null=True, verbose_name='Approval id')),
                ('purdenialid', models.BigIntegerField(blank=True, null=True, verbose_name='Denial id')),
                ('purreasondecline', models.CharField(blank=True, max_length=50, null=True)),
                ('purreasondeclinecode', models.CharField(blank=True, max_length=16, null=True)),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='purchase_client', to='dateSite.Client')),
                ('paycode', models.ForeignKey(blank=True, db_column='paycode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='purchase_payplan', to='dateSite.PayPlan')),
            ],
            options={
                'managed': True,
                'db_table': 'purchase',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('reccode', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('recdate', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Date/Time')),
                ('reccredit', models.IntegerField(blank=True, null=True, verbose_name='Credit')),
                ('recdebit', models.IntegerField(blank=True, null=True, verbose_name='Debit')),
                ('clicodemain', models.ForeignKey(db_column='clicodemain', on_delete=django.db.models.deletion.DO_NOTHING, related_name='record_clientmain', to='dateSite.Client')),
                ('clicodesecondary', models.ForeignKey(blank=True, db_column='clicodesecondary', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='record_clientsecondary', to='dateSite.Client')),
                ('purcode', models.ForeignKey(blank=True, db_column='purcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='record_purchase', to='dateSite.Purchase')),
            ],
            options={
                'managed': True,
                'db_table': 'record',
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('regcode', models.BigAutoField(primary_key=True, serialize=False)),
                ('regsignin', models.DateTimeField(verbose_name='Datetime to connect')),
                ('regsignout', models.DateTimeField(blank=True, null=True, verbose_name='Datetime to disconnect')),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='log_client', to='dateSite.Client')),
            ],
            options={
                'managed': True,
                'db_table': 'register',
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('relcode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('relname', models.CharField(max_length=100, verbose_name='Name')),
                ('relactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'religion',
            },
        ),
        migrations.CreateModel(
            name='ReligionLanguage',
            fields=[
                ('rlcode', models.AutoField(primary_key=True, serialize=False)),
                ('rlname', models.CharField(max_length=100)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='religionlang_language', to='dateSite.Language')),
                ('relcode', models.ForeignKey(db_column='relcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='religionlang', to='dateSite.Religion')),
            ],
            options={
                'managed': True,
                'db_table': 'religion_language',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('roocode', models.BigAutoField(primary_key=True, serialize=False)),
                ('roostartdatetime', models.DateTimeField(blank=True, null=True, verbose_name='Datetime to start chat')),
                ('rooendclient1', models.BooleanField(default=False)),
                ('rooendclient2', models.BooleanField(default=False)),
                ('rooendc1datetime', models.DateTimeField(blank=True, null=True, verbose_name='Datetime to end chat client1')),
                ('rooendc2datetime', models.DateTimeField(blank=True, null=True, verbose_name='Datetime to end chat client2')),
                ('clicode1', models.ForeignKey(db_column='clicode1', on_delete=django.db.models.deletion.DO_NOTHING, related_name='room_client1', to='dateSite.Client')),
                ('clicode2', models.ForeignKey(db_column='clicode2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='room_client2', to='dateSite.Client')),
            ],
            options={
                'db_table': 'room',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('sercode', models.AutoField(primary_key=True, serialize=False)),
                ('sername', models.CharField(max_length=100)),
                ('seractive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='ServiceLanguage',
            fields=[
                ('selcode', models.AutoField(primary_key=True, serialize=False)),
                ('selname', models.CharField(max_length=100)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='servicelang_language', to='dateSite.Language')),
                ('sercode', models.ForeignKey(db_column='sercode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='servicelang_service', to='dateSite.Service')),
            ],
            options={
                'managed': True,
                'db_table': 'service_language',
            },
        ),
        migrations.CreateModel(
            name='SkinTone',
            fields=[
                ('skicode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('skiname', models.CharField(max_length=100, verbose_name='Tone')),
                ('skiactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'skintone',
            },
        ),
        migrations.CreateModel(
            name='SkinToneLanguage',
            fields=[
                ('sklcode', models.AutoField(primary_key=True, serialize=False)),
                ('sklname', models.CharField(max_length=100)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='skinlang_language', to='dateSite.Language')),
                ('skicode', models.ForeignKey(db_column='skicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='skinlang', to='dateSite.SkinTone')),
            ],
            options={
                'managed': True,
                'db_table': 'skintone_language',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('spocode', models.AutoField(primary_key=True, serialize=False)),
                ('sponame', models.CharField(max_length=200)),
                ('spoactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'sport',
            },
        ),
        migrations.CreateModel(
            name='SportClient',
            fields=[
                ('spccode', models.BigAutoField(primary_key=True, serialize=False)),
                ('clicode', models.ForeignKey(db_column='clicode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='sportclient_client', to='dateSite.Client')),
                ('spocode', models.ForeignKey(db_column='spocode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='sportclient_sport', to='dateSite.Sport')),
            ],
            options={
                'managed': True,
                'db_table': 'sport_client',
            },
        ),
        migrations.CreateModel(
            name='SportLanguage',
            fields=[
                ('splcode', models.AutoField(primary_key=True, serialize=False)),
                ('splname', models.CharField(max_length=200)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='sportlang_language', to='dateSite.Language')),
                ('spocode', models.ForeignKey(db_column='spocode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='sportlang_sport', to='dateSite.Sport')),
            ],
            options={
                'managed': True,
                'db_table': 'sport_language',
            },
        ),
        migrations.CreateModel(
            name='SubService',
            fields=[
                ('suscode', models.AutoField(primary_key=True, serialize=False)),
                ('susdescription', models.CharField(max_length=60)),
                ('susquantitycredit', models.SmallIntegerField()),
                ('susactive', models.BooleanField()),
                ('sercode', models.ForeignKey(db_column='sercode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='subservice_service', to='dateSite.Service')),
            ],
            options={
                'managed': True,
                'db_table': 'subservice',
            },
        ),
        migrations.CreateModel(
            name='SubServiceLanguage',
            fields=[
                ('sulcode', models.AutoField(primary_key=True, serialize=False)),
                ('suldescription', models.CharField(max_length=60)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='subservicelang_language', to='dateSite.Language')),
                ('suscode', models.ForeignKey(db_column='suscode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='subservicelang_subservice', to='dateSite.SubService')),
            ],
            options={
                'managed': True,
                'db_table': 'subservice_language',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('tescode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('tesname', models.CharField(max_length=200, verbose_name='Name')),
                ('tesbirthdate', models.DateField(blank=True, null=True)),
                ('tescomment', models.TextField(verbose_name='Comment')),
                ('tespicture', models.ImageField(upload_to='testimonials', verbose_name='Picture')),
                ('tesdate', models.DateField(verbose_name='Date')),
                ('testype', models.CharField(choices=[('C', 'Comment'), ('L', 'Love Story')], max_length=1, verbose_name='Testimonial Type')),
                ('tesactive', models.BooleanField(verbose_name='Active')),
                ('citcode', models.ForeignKey(blank=True, db_column='citcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='testimonial_city', to='dateSite.City')),
            ],
            options={
                'managed': True,
                'db_table': 'testimonial',
            },
        ),
        migrations.CreateModel(
            name='TypeClient',
            fields=[
                ('tclcode', models.AutoField(primary_key=True, serialize=False)),
                ('tcldescription', models.CharField(max_length=30)),
                ('tclactive', models.BooleanField()),
            ],
            options={
                'managed': True,
                'db_table': 'typeclient',
            },
        ),
        migrations.CreateModel(
            name='TypeOffer',
            fields=[
                ('tofcode', models.AutoField(primary_key=True, serialize=False)),
                ('tofname', models.CharField(max_length=100)),
                ('tofdescription', models.CharField(max_length=100)),
                ('tofstart', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('tofend', models.DateField(blank=True, null=True, verbose_name='End date')),
            ],
            options={
                'managed': True,
                'db_table': 'typeoffer',
            },
        ),
        migrations.CreateModel(
            name='Waist',
            fields=[
                ('waicode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('wainame', models.CharField(max_length=100, verbose_name='Name')),
                ('waiactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'waist',
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('weicode', models.AutoField(primary_key=True, serialize=False)),
                ('weidescription', models.CharField(max_length=100)),
            ],
            options={
                'managed': True,
                'db_table': 'weight',
            },
        ),
        migrations.CreateModel(
            name='Zodiac',
            fields=[
                ('zodcode', models.AutoField(primary_key=True, serialize=False, verbose_name='Code')),
                ('zodname', models.CharField(max_length=100, verbose_name='Name')),
                ('zodactive', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'managed': True,
                'db_table': 'zodiacsign',
            },
        ),
        migrations.CreateModel(
            name='ZodiacLanguage',
            fields=[
                ('zolcode', models.AutoField(primary_key=True, serialize=False)),
                ('zolname', models.CharField(max_length=100)),
                ('lancode', models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='zodiaclang_language', to='dateSite.Language')),
                ('zodcode', models.ForeignKey(db_column='zodcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='zodiaclang', to='dateSite.Zodiac')),
            ],
            options={
                'managed': True,
                'db_table': 'zodiac_language',
            },
        ),
        migrations.AddField(
            model_name='record',
            name='roocode',
            field=models.ForeignKey(blank=True, db_column='roocode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='record_room', to='dateSite.Room'),
        ),
        migrations.AddField(
            model_name='record',
            name='suscode',
            field=models.ForeignKey(blank=True, db_column='suscode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='record_subservice', to='dateSite.SubService'),
        ),
        migrations.AddField(
            model_name='payplan',
            name='tofcode',
            field=models.ForeignKey(blank=True, db_column='tofcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='payplan_typeoffer', to='dateSite.TypeOffer'),
        ),
        migrations.AddField(
            model_name='notification',
            name='ntycode',
            field=models.ForeignKey(db_column='ntycode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_notificationtype', to='dateSite.NotificationType'),
        ),
        migrations.AddField(
            model_name='message',
            name='roocode',
            field=models.ForeignKey(db_column='roocode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='messages_room', to='dateSite.Room'),
        ),
        migrations.AddField(
            model_name='inbox',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='inbox_lang', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='hobbielanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hobbielang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='hairlengthlanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='hairlengthlang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='haircolorlanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='haircolorlang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='genderlanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='genderlang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='frequencylanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='frequencylang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='feelinglanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='feelinglang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='eyescolorlanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='eyescolorlang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='ethnicitylanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='ethnicitylang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='educationlanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='educationlang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='countrylanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='countrylang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='clientcollectionalbum',
            name='phacode',
            field=models.ForeignKey(db_column='phacode', on_delete=django.db.models.deletion.DO_NOTHING, to='dateSite.PhotoAlbum'),
        ),
        migrations.AddField(
            model_name='client',
            name='educode',
            field=models.ForeignKey(blank=True, db_column='educode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_education', to='dateSite.Education'),
        ),
        migrations.AddField(
            model_name='client',
            name='ethcode',
            field=models.ForeignKey(blank=True, db_column='ethcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_ethnicity', to='dateSite.Ethnicity'),
        ),
        migrations.AddField(
            model_name='client',
            name='eyecode',
            field=models.ForeignKey(blank=True, db_column='eyecode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_eyes', to='dateSite.EyesColor'),
        ),
        migrations.AddField(
            model_name='client',
            name='feecode',
            field=models.ForeignKey(blank=True, db_column='feecode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_feeling', to='dateSite.Feeling'),
        ),
        migrations.AddField(
            model_name='client',
            name='fracode',
            field=models.ForeignKey(blank=True, db_column='fracode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='franchise_code', to='dateSite.Franchise'),
        ),
        migrations.AddField(
            model_name='client',
            name='frecodedrink',
            field=models.ForeignKey(blank=True, db_column='frecodedrink', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_frequencydrink', to='dateSite.Frequency'),
        ),
        migrations.AddField(
            model_name='client',
            name='frecodesmoke',
            field=models.ForeignKey(blank=True, db_column='frecodesmoke', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_frequencysmoke', to='dateSite.Frequency'),
        ),
        migrations.AddField(
            model_name='client',
            name='gencode',
            field=models.ForeignKey(blank=True, db_column='gencode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_gender', to='dateSite.Gender'),
        ),
        migrations.AddField(
            model_name='client',
            name='haicode',
            field=models.ForeignKey(blank=True, db_column='haicode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_hair', to='dateSite.HairColor'),
        ),
        migrations.AddField(
            model_name='client',
            name='heicode',
            field=models.ForeignKey(blank=True, db_column='heicode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_height', to='dateSite.Height'),
        ),
        migrations.AddField(
            model_name='client',
            name='hlecode',
            field=models.ForeignKey(blank=True, db_column='hlecode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_hairlength', to='dateSite.HairLength'),
        ),
        migrations.AddField(
            model_name='client',
            name='inccode',
            field=models.ForeignKey(blank=True, db_column='inccode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_income', to='dateSite.Income'),
        ),
        migrations.AddField(
            model_name='client',
            name='lancodefirst',
            field=models.ForeignKey(blank=True, db_column='lancodefirst', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_first_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='client',
            name='lancodesecond',
            field=models.ForeignKey(blank=True, db_column='lancodesecond', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_second_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='client',
            name='marcode',
            field=models.ForeignKey(blank=True, db_column='marcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_marital', to='dateSite.Marital'),
        ),
        migrations.AddField(
            model_name='client',
            name='ocucode',
            field=models.ForeignKey(blank=True, db_column='ocucode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_occupation', to='dateSite.Occupation'),
        ),
        migrations.AddField(
            model_name='client',
            name='relcode',
            field=models.ForeignKey(blank=True, db_column='relcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='religion_code', to='dateSite.Religion'),
        ),
        migrations.AddField(
            model_name='client',
            name='tclcode',
            field=models.ForeignKey(db_column='tclcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_typeclient', to='dateSite.TypeClient'),
        ),
        migrations.AddField(
            model_name='client',
            name='waistcode',
            field=models.ForeignKey(blank=True, db_column='waicode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_butt', to='dateSite.Waist'),
        ),
        migrations.AddField(
            model_name='client',
            name='weicode',
            field=models.ForeignKey(blank=True, db_column='weicode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_weight', to='dateSite.Weight'),
        ),
        migrations.AddField(
            model_name='client',
            name='zodcode',
            field=models.ForeignKey(blank=True, db_column='zodcode', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='zodiac_code', to='dateSite.Zodiac'),
        ),
        migrations.AddField(
            model_name='citylanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='citylang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='city',
            name='coucode',
            field=models.ForeignKey(db_column='coucode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='city_country', to='dateSite.Country'),
        ),
        migrations.AddField(
            model_name='childrenlanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='childrenlang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='bodytypelanguage',
            name='lancode',
            field=models.ForeignKey(db_column='lancode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='bodytypelang_language', to='dateSite.Language'),
        ),
        migrations.AddField(
            model_name='blockedclient',
            name='clicoderecieved',
            field=models.ForeignKey(db_column='clicoderecieved', on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_blocked_me', to='dateSite.Client'),
        ),
        migrations.AddField(
            model_name='blockedclient',
            name='clicodesent',
            field=models.ForeignKey(db_column='clicodesent', on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_blocked_to', to='dateSite.Client'),
        ),
    ]
